(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{119:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(a),u=n,m=b["".concat(i,".").concat(u)]||b[u]||d[u]||o;return a?r.a.createElement(m,c({ref:t},s,{components:a})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},120:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},121:function(e,t,a){"use strict";var n=a(0),r=a(122);t.a=function(){const e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},122:function(e,t,a){"use strict";var n=a(0);const r=Object(n.createContext)(void 0);t.a=r},123:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(121),i=a(120),c=a(49),l=a.n(c);const s=37,p=39;t.a=function(e){const{block:t,children:a,defaultValue:c,values:b,groupId:d,className:u}=e,{tabGroupChoices:m,setTabGroupChoices:g}=Object(o.a)(),[h,j]=Object(n.useState)(c),[O,v]=Object(n.useState)(!1);if(null!=d){const e=m[d];null!=e&&e!==h&&b.some((t=>t.value===e))&&j(e)}const f=e=>{j(e),null!=d&&g(d,e)},y=[],N=e=>{e.metaKey||e.altKey||e.ctrlKey||v(!0)},k=()=>{v(!1)};return Object(n.useEffect)((()=>(window.addEventListener("keydown",N),window.addEventListener("mousedown",k),()=>{window.removeEventListener("keydown",N),window.removeEventListener("mousedown",k)})),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},u)},b.map((({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===e,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":h===e}),style:O?{}:{outline:"none"},key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,t,a)=>{switch(a.keyCode){case p:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case s:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(y,e.target,e),N(e)},onFocus:()=>f(e),onClick:()=>{f(e),v(!1)},onPointerDown:()=>v(!1)},t)))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((e=>e.props.value===h))[0]))}},124:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},128:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/graphql-playground-3ed9e7bc5cee10c4e89be27df856dbb8.png"},62:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),o=(a(0),a(119)),i=a(123),c=a(124),l={id:"ktor",title:"Ktor",sidebar_label:"Ktor"},s={unversionedId:"getting_started/kotlin/ktor",id:"getting_started/kotlin/ktor",isDocsHomePage:!1,title:"Ktor",description:"One of the core design goals of GraphQLize is not to tie to any web development framework and remain as a drop-in JVM library.",source:"@site/docs/getting_started/kotlin/ktor.mdx",slug:"/getting_started/kotlin/ktor",permalink:"/docs/getting_started/kotlin/ktor",editUrl:"https://github.com/graphqlize/graphqlize.github.io/tree/source/docs/getting_started/kotlin/ktor.mdx",version:"current",sidebar_label:"Ktor",sidebar:"docs",previous:{title:"Spring Boot",permalink:"/docs/getting_started/kotlin/springboot"},next:{title:"Pedestal",permalink:"/docs/getting_started/clojure/pedestal"}},p=[{value:"Adding Dependencies",id:"adding-dependencies",children:[]},{value:"Initializing GraphQLizeResolver",id:"initializing-graphqlizeresolver",children:[{value:"Configuring DataSource",id:"configuring-datasource",children:[]}]},{value:"Adding GraphQL Endpoint",id:"adding-graphql-endpoint",children:[{value:"Test Drive",id:"test-drive",children:[]}]},{value:"GraphQL Playground and Voyager",id:"graphql-playground-and-voyager",children:[]},{value:"Next Steps",id:"next-steps",children:[]}],b={rightToc:p};function d(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,l,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"One of the core design goals of GraphQLize is not to tie to any web development framework and remain as a drop-in JVM library."),Object(o.b)("p",null,"Getting started with GraphQLize in ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://ktor.io/"}),"Ktor")," is simple and involves only a few steps."),Object(o.b)("h2",{id:"adding-dependencies"},"Adding Dependencies"),Object(o.b)("p",null,"Let's start with creating a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://ktor.io/quickstart/index.html#set-up-a-ktor-project"}),"new Ktor Project")," using Gradle & Netty. Under ",Object(o.b)("em",{parentName:"p"},"Server")," settings, select ",Object(o.b)("em",{parentName:"p"},"Jackson")," & ",Object(o.b)("em",{parentName:"p"},"Content Negotiation"),"."),Object(o.b)("p",null,"Then in the created project add the ",Object(o.b)("inlineCode",{parentName:"p"},"graphqlize-java")," & the JDBC driver dependencies."),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://clojars.org/org.graphqlize/graphqlize-java"}),Object(o.b)("img",Object(n.a)({parentName:"a"},{src:"https://img.shields.io/clojars/v/org.graphqlize/graphqlize-java.svg",alt:"Clojars Project"})))),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-groovy",metastring:"{4,15}","{4,15}":!0}),"// ...\nrepositories {\n  // ...\n  maven { url \"https://clojars.org/repo\" }\n}\n// ...\ndependencies {\n\n  // For Postgres\n  implementation 'org.postgresql:postgresql:42.2.10'\n\n  // For MySQL\n  implementation 'mysql:mysql-connector-java:8.0.19'\n\n  implementation 'org.graphqlize:graphqlize-java:0.1.0-alpha20'\n\n  // DB Connection Pooling\n  implementation 'com.zaxxer:HikariCP:3.4.2'\n\n  // ...\n}\n")),Object(o.b)("h2",{id:"initializing-graphqlizeresolver"},"Initializing GraphQLizeResolver"),Object(o.b)("p",null,"To initialize ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLizeResolver"),", we need a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.oracle.com/javase/7/docs/api/javax/sql/DataSource.html"}),"DataSource"),"."),Object(o.b)("h3",{id:"configuring-datasource"},"Configuring DataSource"),Object(o.b)(i.a,{defaultValue:"postgres",values:[{label:"Postgres",value:"postgres"},{label:"MySQL",value:"mysql"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"postgres",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),'// Application.kt\npackage org.graphqlize\n\n// ...\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\nfun getDataSource(): HikariDataSource {\n  val config = HikariConfig()\n  config.setJdbcUrl("jdbc:postgresql://localhost:5432/sakila");\n  config.setUsername("postgres");\n  config.setPassword("postgres");\n  return HikariDataSource(config)\n}\n\n// ...\n\nfun Application.module(testing: Boolean = false) { \n  val dataSource = getDataSource()\n  // ...\n}\n'))),Object(o.b)(c.a,{value:"mysql",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),'// Application.kt\npackage org.graphqlize\n\n// ...\nimport com.zaxxer.hikari.HikariConfig;\nimport com.zaxxer.hikari.HikariDataSource;\n\nfun getDataSource(): HikariDataSource {\n  val config = HikariConfig()\n  config.setJdbcUrl("jdbc:postgresql://localhost:5432/sakila");\n  config.setUsername("postgres");\n  config.setPassword("postgres");\n  return HikariDataSource(config)\n}\n\n// ...\n\nfun Application.module(testing: Boolean = false) { \n  val dataSource = getDataSource()\n  // ...\n}\n\n')))),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Make sure you are changing the above values to refer your database connection. The above example assumes that you are using the ",Object(o.b)("em",{parentName:"p"},"sakila")," database created from this ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jOOQ/jOOQ/tree/master/jOOQ-examples/Sakila"}),"JOOQ's example repository"),".  "))),Object(o.b)("p",null,"With the data source in place, all we need to do is the create a new instance of ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLizeResolver")," using it. "),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin",metastring:"{8}","{8}":!0}),"// ...\nimport org.graphqlize.java.GraphQLResolver;\nimport org.graphqlize.java.GraphQLizeResolver;\n// ...\n\nfun Application.module(testing: Boolean = false) { \n  // ...\n  val graphQLResolver = GraphQLizeResolver(dataSource)\n}\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Currently, it takes around 8 to 12 seconds to initialize. I am planning to ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/graphqlize/graphqlize/issues/48"}),"work on it")," in a future release."))),Object(o.b)("h2",{id:"adding-graphql-endpoint"},"Adding GraphQL Endpoint"),Object(o.b)("p",null,"The next step is adding an API to expose the GraphQL endpoint. To do it, first, add a data class to model the incoming GraphQL request."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),"// ...\nimport com.fasterxml.jackson.annotation.JsonCreator\n\n// ...\ndata class GraphQLRequest @JsonCreator constructor(\n    val query: String,\n    val variables: Map<String, Any>?\n)\n// ...\n")),Object(o.b)("p",null,"Then add a new router ",Object(o.b)("inlineCode",{parentName:"p"},"/graphql")," and deserialize the request to this ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLRequest")," class using Jackson. Finally, get the query & the variables from the request and invoke the ",Object(o.b)("inlineCode",{parentName:"p"},"resolve")," method on the initialized instance of ",Object(o.b)("inlineCode",{parentName:"p"},"GraphQLizeResolver"),". It returns the ",Object(o.b)("inlineCode",{parentName:"p"},"result")," as stringified JSON, and we are sending it as response body with the content type as ",Object(o.b)("inlineCode",{parentName:"p"},"application/json"),". "),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin",metastring:"{17-20}","{17-20}":!0}),'// ...\nimport com.fasterxml.jackson.databind.DeserializationFeature\n\n// ...\nfun Application.module(testing: Boolean = false) {\n  val dataSource = getDataSource()\n  val graphQLResolver = GraphQLizeResolver(dataSource)\n\n  install(ContentNegotiation) {\n    jackson {\n      disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n    }\n  }\n\n  routing {\n    post("/graphql") {\n      val gqlReq = call.receive<GraphQLRequest>()\n      val result =\n        graphQLResolver.resolve(gqlReq.query, gqlReq.variables)\n      call.respondText(result, ContentType.Application.Json)\n    }\n  }\n}\n')),Object(o.b)("h3",{id:"test-drive"},"Test Drive"),Object(o.b)("p",null,"To do a test drive of this implementation, start the server and hit the endpoint via curl."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),'> curl -X POST \\\n  --data \'{"query": "query { actorByActorId(actorId: 1){firstName}}"}\' \\\n  -H "Content-Type: application/json" \\\n  http://localhost:4567/graphql\n')),Object(o.b)("p",null,"You'll get a response like below."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "actorByActorId": {\n      "firstName": "PENELOPE"\n    }\n  }\n}\n')),Object(o.b)("h2",{id:"graphql-playground-and-voyager"},"GraphQL Playground and Voyager"),Object(o.b)("p",null,"With the GraphQL endpoint up and running, the next step is introspecting the GraphQL schema and try out some more queries. "),Object(o.b)("p",null,"To introspect, we are going to make use of ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/APIs-guru/graphql-voyager"}),"Voyager"),", a tool to visualize GraphQL API as an interactive graph. Adding it to our project is easy thanks to ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://ktor.io/servers/features/static-content.html"}),"static content serve capability")," of Ktor. "),Object(o.b)("p",null,"All you need to do is download this ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/graphqlize/graphqlize-demo/blob/master/kotlin/ktor/resources/voyager.html"}),"voyager.html")," file and put it under the ",Object(o.b)("em",{parentName:"p"},"/resources")," directory. "),Object(o.b)("p",null,"Then configure Ktor to serve this file."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),'// ...\nfun Application.module(testing: Boolean = false) {\n  // ...\n  routing {\n    // ...\n    static("/") {\n      resource("voyager.html")\n    }\n  }\n}\n')),Object(o.b)("p",null,"When you restart the server, the Voyager will be available at ",Object(o.b)("em",{parentName:"p"},"http://localhost:8080/voyager.html"),". A sample output would look like ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.graphqlize.org/html/sakila-voyager.html"}),"this"),"."),Object(o.b)("p",null,"Then to interact with the GraphQL API, let's add the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/prisma-labs/graphql-playground"}),"GraphQL Playground"),". Like Voyager, download this ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/graphqlize/graphqlize-demo/blob/master/kotlin/ktor/resources/playground.html"}),"playground.html")," file and put in the ",Object(o.b)("em",{parentName:"p"},"resources")," directory. "),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-kotlin"}),'// ...\nfun Application.module(testing: Boolean = false) {\n  // ...\n  routing {\n    // ...\n    static("/") {\n      // ...\n      resource("playground.html")\n    }\n  }\n}\n')),Object(o.b)("p",null,"This GraphQL playground will be available at ",Object(o.b)("em",{parentName:"p"},"http://localhost:8080/playground.html")," after server restart. "),Object(o.b)("p",null,Object(o.b)("img",{src:a(128).default})),Object(o.b)("h2",{id:"next-steps"},"Next Steps"),Object(o.b)("p",null,"Congrats! You are on course to build impressive applications using GraphQLize in less time. To save yourself some more time, do refer ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/graphql_schema/types-and-fields"}),"this documentation")," to know more about how GraphQLize generates the GraphQL schema and the queries. "),Object(o.b)("p",null,"The sample code is available in ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/graphqlize/graphqlize-demo/tree/master/kotlin/ktor"}),"this GitHub Repository"),"."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"You can also customize certain default behaviours of GraphQLize in future releases."))))}d.isMDXComponent=!0}}]);